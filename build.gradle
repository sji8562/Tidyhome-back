plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.1'
	id 'io.spring.dependency-management' version '1.1.4'
	id "org.asciidoctor.jvm.convert" version "3.3.2"
}

group = 'com.tenco'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	google()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation group: 'org.glassfish.web', name: 'jakarta.servlet.jsp.jstl', version: '2.0.0'
	implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'
	implementation group: 'com.auth0', name: 'java-jwt', version: '4.4.0'
	//firebase
	// Import the BoM for the Firebase platform
	implementation 'com.google.firebase:firebase-admin:9.2.0'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'net.nurigo:sdk:4.3.0'

	// restdocs-mockmvc의 testCompile 구성 -> mockMvc를 사용해서 snippets 조각들을 뽑아낼 수 있게 된다.
	// MockMvc 대신 WebTestClient을 사용하려면 spring-restdocs-webtestclient 추가
	// MockMvc 대신 REST Assured를 사용하려면 spring-restdocs-restassured 를 추가
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'


}
ext {
	// 아래서 사용할 변수 선언
	snippetsDir = file('build/generated-snippets')
}

tasks.named('test') {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

// static/docs 폴더 비우기
asciidoctor.doFirst {
	delete file('src/main/resources/static/docs')
}

// asccidoctor 작업 이후 생성된 HTML 파일을 static/docs 로 copy
task copyDocument(type: Copy) {
	dependsOn asciidoctor
	from file("build/docs/asciidoc")
	into file("src/main/resources/static/docs")
}

// build 의 의존작업 명시
build {
	dependsOn copyDocument
}


// 참고사항 //
// 공식 문서에서는 위의 ascidoctor.doFirst부터 아래 내용은 없고 이와 같은 내용만 있습니다.
// 이렇게 하면 jar로 만들어 질때 옮겨지는 것으로 IDE로 돌릴 때는 build 폴더에서만 확인이 가능합니다.
// 위 방법을 사용하면 IDE에서도 static으로 옮겨진 것을 확인할 수 있습니다.
// 위에 방법을 사용하든 아래 방법을 사용하든 편한 선택지를 사용하시면 됩니다.
bootJar {
	dependsOn asciidoctor
	copy {
		// src/docs/asciidoc == from 경로
		from "${asciidoctor.outputDir}"
		into 'src/main/resources/static/docs'    // /static/docs로 복사!
	}
}
